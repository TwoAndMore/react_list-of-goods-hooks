{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","isReversed","setReverse","NONE","sortType","setSortType","wordsLength","setLength","changedArray","goods","visibleGoods","filter","goodItem","length","ALPHABET","sort","a","b","localeCompare","LENGTH","reverse","getReorderedGoods","className","map","uuidv4","type","onClick","current","onChange","event","target","value","Array","_","index","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4DAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCP,mBAAS,GAA1C,mBAAOQ,EAAP,KAAoBC,EAApB,KAEMC,EAlCR,SACEC,EACAL,EACAH,EACAK,GAEA,IAAMI,EAAe,YAAID,GACtBE,QAAO,SAAAC,GAAQ,OAAIA,EAASC,QAAUP,KAEzC,OAAQF,GACN,KAAKT,EAASmB,SACZJ,EAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKtB,EAASwB,OACZT,EAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,OAASI,EAAEJ,UAE3C,KAAKlB,EAASQ,MAShB,OAJIF,GACFS,EAAaU,UAGRV,EAUHW,CAAkBzB,EAAiBQ,EAAUH,EAAYK,GAQ7D,OACE,qBAAKgB,UAAU,8BAAf,SACIvB,EAWE,qCACE,oBAAIuB,UAAU,QAAd,SACGd,EAAae,KAAI,SAAAX,GAAQ,OACxB,oBAAIU,UAAU,cAAd,SACGV,GAD8BY,oBAMrC,sBAAKF,UAAU,UAAf,UACE,wBACEG,KAAK,SACLH,UAAU,oBACVI,QAAS,kBAAMrB,EAAYV,EAASmB,WAHtC,iCAQA,wBACEW,KAAK,SACLH,UAAU,oBACVI,QAAS,kBAAMrB,EAAYV,EAASwB,SAHtC,4BAQA,wBACEM,KAAK,SACLH,UAAU,iBACVI,QAAS,kBAAMxB,GAAW,SAAAyB,GAAO,OAAKA,MAHxC,qBAQA,wBACEF,KAAK,SACLH,UAAU,mBACVI,QAxDA,WACZrB,EAAYV,EAASQ,MACrBD,GAAW,GACXK,EAAU,IAkDA,sBASF,qBAAKe,UAAU,oBAAf,SACE,wBACEM,SAAU,SAAAC,GAAK,OAAItB,GAAWsB,EAAMC,OAAOC,QAC3CA,MAAOzB,EAFT,SAIG,YAAI0B,MAAM,KAAKT,KAAI,SAACU,EAAGC,GAAJ,OAClB,wBAAQH,MAAOG,EAAQ,EAAvB,SACGA,EAAQ,GADoBV,yBA1DvC,wBACEC,KAAK,SACLH,UAAU,iBACVI,QAAS,kBAAM1B,GAAS,IAH1B,sBCrEVmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c55e75b3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  wordsLength: number,\n) {\n  const visibleGoods = [...goods]\n    .filter(goodItem => goodItem.length >= wordsLength);\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [wordsLength, setLength] = useState(1);\n\n  const changedArray\n    = getReorderedGoods(goodsFromServer, sortType, isReversed, wordsLength);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n    setLength(1);\n  };\n\n  return (\n    <div className=\"App notification is-warning\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            className=\"button is-link\"\n            onClick={() => setStart(true)}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <ul className=\"Goods\">\n              {changedArray.map(goodItem => (\n                <li className=\"Goods__item\" key={uuidv4()}>\n                  {goodItem}\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"options\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => setSortType(SortType.ALPHABET)}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => setSortType(SortType.LENGTH)}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-info\"\n                onClick={() => setReverse(current => !current)}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-danger\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            </div>\n\n            <div className=\"select is-success\">\n              <select\n                onChange={event => setLength(+event.target.value)}\n                value={wordsLength}\n              >\n                {[...Array(10)].map((_, index) => (\n                  <option value={index + 1} key={uuidv4()}>\n                    {index + 1}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}