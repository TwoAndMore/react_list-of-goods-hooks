{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","isReversed","setReverse","NONE","sortType","setSortType","wordsLength","setLength","changedArray","goods","visibleGoods","filter","goodItem","length","sort","prev","curr","ALPHABET","localeCompare","LENGTH","reverse","getReorderedGoods","className","type","onClick","map","uuidv4","current","onChange","event","target","value","Array","_","index","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4DAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCP,mBAAS,GAA1C,mBAAOQ,EAAP,KAAoBC,EAApB,KAEMC,EAjCR,SACEC,EACAL,EACAH,EACAK,GAEA,IAAMI,EAAe,YAAID,GACtBE,QAAO,SAAAC,GAAQ,OAAIA,EAASC,QAAUP,KAiBzC,OAfAI,EAAaI,MAAK,SAACC,EAAMC,GACvB,OAAQZ,GACN,KAAKT,EAASsB,SACZ,OAAOF,EAAKG,cAAcF,GAC5B,KAAKrB,EAASwB,OACZ,OAAOJ,EAAKF,OAASG,EAAKH,OAC5B,QACE,OAAO,MAITZ,GACFS,EAAaU,UAGRV,EAUHW,CAAkBzB,EAAiBQ,EAAUH,EAAYK,GAE7D,OACE,sBAAKgB,UAAU,8BAAf,WACIvB,GACA,wBACEwB,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAMxB,GAAS,IAH1B,mBASDD,GACC,qCACE,oBAAIuB,UAAU,QAAd,SACGd,EAAaiB,KAAI,SAAAb,GAAQ,OACxB,oBAAIU,UAAU,cAAd,SACGV,GAD8Bc,oBAMrC,sBAAKJ,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMnB,EAAYV,EAASsB,WAHtC,iCAQA,wBACEM,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMnB,EAAYV,EAASwB,SAHtC,4BAQA,wBACEI,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAMtB,GAAW,SAAAyB,GAAO,OAAKA,MAHxC,qBAQA,wBACEJ,KAAK,SACLD,UAAU,mBACVE,QAAS,WACPnB,EAAYV,EAASQ,MACrBD,GAAW,GACXK,EAAU,IANd,sBAaF,qBAAKe,UAAU,oBAAf,SACE,wBACEM,SAAU,SAAAC,GAAK,OAAItB,GAAWsB,EAAMC,OAAOC,QAC3CA,MAAOzB,EAFT,SAIG,YAAI0B,MAAM,KAAKP,KAAI,SAACQ,EAAGC,GAAJ,OAClB,wBAAQH,MAAOG,EAAQ,EAAvB,SACGA,EAAQ,GADoBR,6BC5H/CS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ddb82b6e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  wordsLength: number,\n) {\n  const visibleGoods = [...goods]\n    .filter(goodItem => goodItem.length >= wordsLength);\n\n  visibleGoods.sort((prev, curr) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prev.localeCompare(curr);\n      case SortType.LENGTH:\n        return prev.length - curr.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [wordsLength, setLength] = useState(1);\n\n  const changedArray\n    = getReorderedGoods(goodsFromServer, sortType, isReversed, wordsLength);\n\n  return (\n    <div className=\"App notification is-warning\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-link\"\n          onClick={() => setStart(true)}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <ul className=\"Goods\">\n            {changedArray.map(goodItem => (\n              <li className=\"Goods__item\" key={uuidv4()}>\n                {goodItem}\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"options\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => setSortType(SortType.ALPHABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={() => setReverse(current => !current)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReverse(false);\n                setLength(1);\n              }}\n            >\n              Reset\n            </button>\n          </div>\n\n          <div className=\"select is-success\">\n            <select\n              onChange={event => setLength(+event.target.value)}\n              value={wordsLength}\n            >\n              {[...Array(10)].map((_, index) => (\n                <option value={index + 1} key={uuidv4()}>\n                  {index + 1}\n                </option>\n              ))}\n            </select>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}